@using System.Xml.Linq
@model IList<BannerDataDictionary.Models.Table>
@{
    ViewBag.Title = "Tables";
}

@Styles.Render("~/Content/DataTables-1.9.4/media/css/dataTables")

@section subhead
{
    <h1>@ViewBag.Message</h1>

    <div>
        <p>A listing of Oracle Tables</p>
       
        @{
                var linkedServerName = Request.QueryString.Get("Name");
                var includeEmptyTablesValue = Request.QueryString.Get("IncludeEmptyTables");
                var includeEmptyTables = false;
                var includePrefix = "Include";
                var excludePrefix = "Exclude";
                var prefix = includePrefix;
                var invertedIncludeEmptyTables = true;

                if (!String.IsNullOrEmpty(includeEmptyTablesValue))
                {
                    if (!Boolean.TryParse(includeEmptyTablesValue, out includeEmptyTables))
                    {
                        includeEmptyTables = false;
                    }
                    if (includeEmptyTables)
                    {
                        prefix = excludePrefix;
                        invertedIncludeEmptyTables = false;
                    }
                }

                <i>
                    @Html.ActionLink("(" + prefix + " Empty Tables)", "Index", "Tables",
                    new BannerDataDictionary.Models.DatabaseOwner
                    {
                        LinkedServer = @Request.QueryString.Get("LinkedServer"),
                        Owner = @Request.QueryString.Get("Owner"),
                        IncludeEmptyTables = invertedIncludeEmptyTables,
                        NumTables = @Request.QueryString.Get("NumTables")
                    }, null)
                </i>
        }
       
    </div>
}

@*@section subnav
{
    <li>@Html.ActionLink("Sample Index", "Index")</li>
    <li>@Html.ActionLink("Form", "Form")</li>
    <li>@Html.ActionLink("Table", "Table")</li>
    <li class="active">@Html.ActionLink("Data Tables", "DataTable")</li>
    <li>@Html.ActionLink("Display Form", "DisplayForm")</li>
}*@

@section AdditionalScripts
{
    @Scripts.Render("~/bundles/datatables")

    <script type="text/javascript">
        $(function () {
            $(".table").dataTable({
                "aaSorting": [[1, "asc"]], //Default sort on second column
                //"aoColumnDefs": [
                //    { 'bSortable': false, 'aTargets': [0] } //Disables sort on icon columns
                //]
            });
        });
    </script>
    
}

<table class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th>Owner</th>
            <th>Name</th>
            <th>Comments</th>
            <th>Num Rows</th>	
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Owner</td>
                <td>@Html.ActionLink(item.TableName, "Details", "Tables", new BannerDataDictionary.Models.Table { LinkedServerName = item.LinkedServerName, Owner = item.Owner, TableName = item.TableName }, null)</td>
                <td>@if (@item.Comments != null && @item.Comments.Contains("<cmt>"))
                    {
                        <ul>
                            @{
                        var myDoc = XDocument.Parse(@item.Comments);
                        foreach (var node in myDoc.Descendants().Where(x => x.Name != "cmt"))
                        {
                                
                            <li>
                                <strong>@node.Name.ToString().ToUpper():</strong> @node.Value 
                            </li>
                        }
                            }
                        </ul>
                    }
                    else
                    {
                        @item.Comments
                    }
                </td>
                <td>@item.NumRows</td>
            </tr>
        }
    </tbody>
</table>